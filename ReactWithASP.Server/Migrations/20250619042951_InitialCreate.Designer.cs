// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactWithASP.Server.Infrastructure;

#nullable disable

namespace ReactWithASP.Server.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20250619042951_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReactWithASP.Server.Domain.CartLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("GuestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("InStockProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("GuestID");

                    b.HasIndex("InStockProductID");

                    b.HasIndex("UserID");

                    b.ToTable("CartLine");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.Guest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.InStockProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InStockProducts");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GuestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("OrderPlacedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("PaymentReceivedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ReadyToShipDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ReceivedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ShipDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("GuestID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.OrderPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderPayment");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.OrderedProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("InStockProductID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InStockProductID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderedProducts");
                });

            modelBuilder.Entity("ReactWithASP.Server.Infrastructure.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.CartLine", b =>
                {
                    b.HasOne("ReactWithASP.Server.Domain.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID");

                    b.HasOne("ReactWithASP.Server.Domain.InStockProduct", "InStockProduct")
                        .WithMany()
                        .HasForeignKey("InStockProductID");

                    b.HasOne("ReactWithASP.Server.Infrastructure.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Guest");

                    b.Navigation("InStockProduct");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.Order", b =>
                {
                    b.HasOne("ReactWithASP.Server.Domain.Guest", "Guest")
                        .WithMany("Orders")
                        .HasForeignKey("GuestID");

                    b.HasOne("ReactWithASP.Server.Infrastructure.AppUser", "AppUser")
                        .WithMany("MyOrders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.OrderPayment", b =>
                {
                    b.HasOne("ReactWithASP.Server.Domain.Order", "Order")
                        .WithMany("OrderPayments")
                        .HasForeignKey("OrderID");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.OrderedProduct", b =>
                {
                    b.HasOne("ReactWithASP.Server.Domain.InStockProduct", "InStockProduct")
                        .WithMany()
                        .HasForeignKey("InStockProductID");

                    b.HasOne("ReactWithASP.Server.Domain.Order", "Order")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderID");

                    b.Navigation("InStockProduct");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.Guest", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ReactWithASP.Server.Domain.Order", b =>
                {
                    b.Navigation("OrderPayments");

                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("ReactWithASP.Server.Infrastructure.AppUser", b =>
                {
                    b.Navigation("MyOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
