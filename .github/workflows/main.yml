name: Deploy .NET Core App to IIS on Windows Server

on:
  push:
    branches:
      - main

env:
  PROJECT_PATH: 'ReactWithASP.Server\ReactWithASP.Server.csproj' # Your project's .csproj file
  PUBLISH_OUTPUT: '.\publish-output' # Location within the runner's C drive, to publish to. So a later step can find the files.

jobs:
  build_and_deploy:
    runs-on: windows-latest

    # Here we specify the GitHub actions which we want to execute in the runner environment.
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2 # This action clones the repo into the runner vm.

    # This action sets up the .NET Core SDK in the runner vm environment.
    # Specify what version to install.
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    # Command that fetches all the NuGet packages.
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    # Compiles the code, and collects all necessary files into a single folder.
    # Output to a folder within the runner's C drive so a later step can find the files.
    - name: Build and Publish
      shell: pwsh
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} --configuration Release /p:WebPublishMethod=FileSystem /p:PublishProvider=MSDeploy

    - name: Deploy to IIS using msdeploy.exe
      shell: pwsh
      run: |
        $deploycmd = "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe"
        $publishPath = "$env:GITHUB_WORKSPACE\ReactWithASP.Server\bin\Release\net8.0"
        $siteName = "${{ secrets.IIS_SITE_NAME_PROP }}"
        $destFolder = "${{ secrets.WEBDEPLOY_DESTFOLDER }}"
        $compName= "https://${{ secrets.WEBDEPLOY_SERVER }}/msdeploy.axd?site=${{ secrets.IIS_SITE_NAME_PROP }}"
        $myuser= "${{ secrets.WEBDEPLOY_USERNAME }}"
        $mypass= "${{ secrets.WEBDEPLOY_PASSWORD }}"
        & "$deploycmd" -verb:sync -source:iisApp="$publishPath" -dest:iisApp="$siteName,computerName=$compName,userName=$myuser,password=$mypass,AuthType=Basic,dirPath=$destFolder" -enableRule:setAcl -allowUntrusted
